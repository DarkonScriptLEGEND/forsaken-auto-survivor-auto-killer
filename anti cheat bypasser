--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Debris = game:GetService("Debris")
local UserInputService = game:GetService("UserInputService")
local SoundService = game:GetService("SoundService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

--// Constants
local WALK_SPEED = 45
local FORSAKEN_PLACEID = 123456789 -- <-- Put Forsaken place ID here
local FORSAKEN_MUSIC_ID = 1171745634977
local DEFAULT_MUSIC_ID = 18841893567
local TELEPORT_SOUND_ID = "rbxassetid://9118820499" -- nice teleport sound
local FOLLOW_PARTICLE_COLOR = Color3.fromRGB(255, 221, 51)

--// Variables
local guiHidden = false
local followEnabled = false
local currentFollowTarget = nil
local soundPlaying = false
local music

--// Anti-cheat script remover silently (no notification)
local function removeAntiCheatScripts()
    local keywords = {"anti", "cheat", "anti cheat", "hack"}
    local lowercaseKeywords = {}
    for _, k in ipairs(keywords) do
        lowercaseKeywords[#lowercaseKeywords + 1] = k:lower()
    end

    local function containsKeyword(name)
        local n = name:lower()
        for _, kw in ipairs(lowercaseKeywords) do
            if n:find(kw) then
                return true
            end
        end
        return false
    end

    -- Search descendants of Workspace and PlayerScripts, and other common places
    local searchParents = {
        workspace,
        player.PlayerScripts,
        player.Backpack,
        player.Character or nil,
        game:GetService("ReplicatedStorage"),
        game:GetService("ServerScriptService"),
    }

    for _, parent in ipairs(searchParents) do
        if parent then
            for _, desc in ipairs(parent:GetDescendants()) do
                if desc:IsA("Script") or desc:IsA("LocalScript") or desc:IsA("ModuleScript") then
                    if containsKeyword(desc.Name) then
                        pcall(function()
                            desc:Destroy()
                        end)
                    end
                end
            end
        end
    end
end

-- Run anti-cheat remover once at start
removeAntiCheatScripts()

--// WalkSpeed setup and persistence
local function setWalkSpeed(speed)
    local character = player.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = speed
    end
end

player.CharacterAdded:Connect(function(char)
    wait(0.5)
    setWalkSpeed(WALK_SPEED)
    setupHealListener(char)
end)

if player.Character then
    setWalkSpeed(WALK_SPEED)
end

--// GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SpeedDemonGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 230, 0, 130)
mainFrame.Position = UDim2.new(0, 20, 0.4, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = ScreenGui
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Visible = true

local UIListLayout = Instance.new("UIListLayout", mainFrame)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)

-- Info label (for messages)
local infoLabel = Instance.new("TextLabel")
infoLabel.Size = UDim2.new(1, -20, 0, 25)
infoLabel.Position = UDim2.new(0, 10, 0, 5)
infoLabel.BackgroundTransparency = 1
infoLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
infoLabel.Font = Enum.Font.SourceSansBold
infoLabel.TextSize = 16
infoLabel.Text = ""
infoLabel.TextXAlignment = Enum.TextXAlignment.Center
infoLabel.Parent = mainFrame

-- Button generator helper
local function createButton(text, color)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -20, 0, 28)
    btn.BackgroundColor3 = color
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 18
    btn.Text = text
    btn.BorderSizePixel = 0
    btn.Parent = mainFrame
    return btn
end

-- Teleport to furthest location button
local teleportBtn = createButton("Teleport To Furthest", Color3.fromRGB(255, 140, 0)) -- Orange

-- Hide GUI toggle button
local hideBtn = createButton("Hide GUI", Color3.fromRGB(50, 50, 50))

-- Follow player toggle button
local followBtn = createButton("Follow Player", Color3.fromRGB(255, 221, 51)) -- Yellow

--// Teleport sound helper
local function playTeleportSound(pos)
    local sound = Instance.new("Sound")
    sound.SoundId = TELEPORT_SOUND_ID
    sound.Volume = 0.75
    sound.PlayOnRemove = true
    sound.Parent = workspace
    sound.Position = pos or player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position or Vector3.new()
    sound:Destroy()
end

--// Particle effect helper
local function createFollowParticle(part)
    local particle = Instance.new("ParticleEmitter")
    particle.Texture = "rbxassetid://243660364" -- Yellow spark
    particle.Color = ColorSequence.new(FOLLOW_PARTICLE_COLOR)
    particle.LightEmission = 1
    particle.Size = NumberSequence.new(0.8)
    particle.Rate = 50
    particle.Lifetime = NumberRange.new(0.3)
    particle.Speed = NumberRange.new(1, 2)
    particle.Parent = part
    return particle
end

--// Find furthest safe position around player
local function findFurthestSafePosition()
    local character = player.Character
    if not character then return nil end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end
    local origin = hrp.Position

    local furthestPos = nil
    local maxDist = 0

    local function isSafe(pos)
        -- Raycast down 10 studs to check ground and avoid out of bounds (simple check)
        local ray = Ray.new(pos + Vector3.new(0, 5, 0), Vector3.new(0, -10, 0))
        local hit, hitPos = workspace:FindPartOnRay(ray, character)
        if hit and hit.Transparency < 1 and hit.CanCollide then
            -- Also avoid falling off map by checking y position is reasonable (above 0)
            if hitPos.Y > 0 then
                -- Check if position is not inside a wall by region3 overlap (very basic)
                local region = Region3.new(pos - Vector3.new(2,3,2), pos + Vector3.new(2,3,2))
                local parts = workspace:FindPartsInRegion3WithIgnoreList(region, {character}, 10)
                for _, p in pairs(parts) do
                    if p.CanCollide and p.Transparency < 1 then
                        return false
                    end
                end
                return true
            end
        end
        return false
    end

    -- Sample points in a circle radius 60 studs around player
    local radius = 60
    local step = 10
    for angle = 0, 360, step do
        local radians = math.rad(angle)
        local testPos = origin + Vector3.new(math.cos(radians) * radius, 0, math.sin(radians) * radius)
        if isSafe(testPos) then
            local dist = (testPos - origin).Magnitude
            if dist > maxDist then
                maxDist = dist
                furthestPos = testPos
            end
        end
    end

    return furthestPos
end

-- Teleport player to a position with effects
local function teleportPlayerTo(pos)
    local character = player.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    -- Create particle effect at old and new positions
    local oldPos = hrp.Position

    local function spawnParticles(position)
        local part = Instance.new("Part")
        part.Anchored = true
        part.CanCollide = false
        part.Transparency = 1
        part.Position = position
        part.Size = Vector3.new(1,1,1)
        part.Parent = workspace

        local particle = Instance.new("ParticleEmitter")
        particle.Texture = "rbxassetid://243660364" -- yellow spark
        particle.Color = ColorSequence.new(FOLLOW_PARTICLE_COLOR)
        particle.LightEmission = 1
        particle.Size = NumberSequence.new(1)
        particle.Rate = 100
        particle.Lifetime = NumberRange.new(0.5)
        particle.Speed = NumberRange.new(2, 4)
        particle.Parent = part

        Debris:AddItem(part, 1)
    end

    spawnParticles(oldPos)
    hrp.CFrame = CFrame.new(pos + Vector3.new(0,3,0))
    spawnParticles(pos)

    playTeleportSound(pos)
end

--// Follow Player logic

local followParticle

local function getNearestPlayer()
    local character = player.Character
    if not character then return nil end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end

    local nearest = nil
    local nearestDist = math.huge

    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
            local plrPos = plr.Character.HumanoidRootPart.Position
            local dist = (plrPos - hrp.Position).Magnitude
            if dist < nearestDist then
                nearestDist = dist
                nearest = plr
            end
        end
    end

    return nearest
end

local followConnection

local function startFollowing()
    if followConnection then followConnection:Disconnect() end
    followEnabled = true
    followBtn.Text = "Follow Player: ON"

    followConnection = RunService.Heartbeat:Connect(function()
        local character = player.Character
        if not character then return end
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end

        local target = getNearestPlayer()
        if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then return end

        currentFollowTarget = target

        -- Teleport player near target, but safe distance (5 studs behind)
        local targetPos = target.Character.HumanoidRootPart.Position
        local direction = (hrp.Position - targetPos).Unit
        local safePos = targetPos + direction * 5
        teleportPlayerTo(safePos)

        -- Yellow particles on player
        if not followParticle then
            followParticle = createFollowParticle(hrp)
        end
    end)
end

local function stopFollowing()
    followEnabled = false
    followBtn.Text = "Follow Player: OFF"
    if followConnection then
        followConnection:Disconnect()
        followConnection = nil
    end
    if followParticle and followParticle.Parent then
        followParticle:Destroy()
        followParticle = nil
    end
end

followBtn.MouseButton1Click:Connect(function()
    if followEnabled then
        stopFollowing()
    else
        startFollowing()
    end
end)

--// Teleport To Furthest button logic
teleportBtn.MouseButton1Click:Connect(function()
    local pos = findFurthestSafePosition()
    if pos then
        teleportPlayerTo(pos)
        infoLabel.Text = "Teleported to furthest location!"
        wait(3)
        infoLabel.Text = ""
    else
        infoLabel.Text = "No safe location found."
        wait(3)
        infoLabel.Text = ""
    end
end)

--// Hide GUI button toggle
hideBtn.MouseButton1Click:Connect(function()
    guiHidden = not guiHidden
    mainFrame.Visible = not guiHidden
    hideBtn.Text = guiHidden and "Show GUI" or "Hide GUI"
end)

--// Passive Heal when damaged
local function healSmoothly(humanoid)
    local healTime = 0.7
    local maxHealth = humanoid.MaxHealth

    local startTime = tick()
    local connection
    connection = RunService.Heartbeat:Connect(function()
        local elapsed = tick() - startTime
        if elapsed >= healTime or humanoid.Health >= maxHealth then
            humanoid.Health = maxHealth
            connection:Disconnect()
            return
        end

        local newHealth = math.min(maxHealth, humanoid.Health + ((maxHealth) * (elapsed / healTime)))
        humanoid.Health = newHealth
    end)
end

local function setupHealListener(character)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    local lastHealth = humanoid.Health
    humanoid.HealthChanged:Connect(function(newHealth)
        if newHealth < lastHealth then
            healSmoothly(humanoid)
        end
        lastHealth = humanoid.Health
    end)
end

if player.Character then
    setupHealListener(player.Character)
end

player.CharacterAdded:Connect(function(char)
    wait(0.5)
    setWalkSpeed(WALK_SPEED)
    setupHealListener(char)
end)

--// FE AK-47 gun creation and shooting
local function createGun()
    if player.Backpack:FindFirstChild("FE_AK47") or player.Character:FindFirstChild("FE_AK47") then return end

    local tool = Instance.new("Tool")
    tool.Name = "FE_AK47"
    tool.RequiresHandle = true
    tool.CanBeDropped = false
    tool.Parent = player.Backpack

    local handle = Instance.new("Part")
    handle.Name = "Handle"
    handle.Size = Vector3.new(1, 1, 4)
    handle.Color = Color3.fromRGB(40, 40, 40)
    handle.Material = Enum.Material.Metal
    handle.CanCollide = false
    handle.Parent = tool

    local mesh = Instance.new("SpecialMesh", handle)
    mesh.MeshType = Enum.MeshType.FileMesh
    mesh.MeshId = "rbxassetid://7534365874" -- AK-47 mesh, replace if you want
    mesh.TextureId = "rbxassetid://7534365902"
    mesh.Scale = Vector3.new(1,1,1)

    -- RemoteEvent for shooting
    local shootEvent = Instance.new("RemoteEvent")
    shootEvent.Name = "ShootEvent"
    shootEvent.Parent = tool

    -- LocalScript to handle shooting inside the tool
    local shootScript = Instance.new("LocalScript")
    shootScript.Name = "ShootHandler"
    shootScript.Parent = tool
    shootScript.Source = [[
        local tool = script.Parent
        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()
        local shootEvent = tool:WaitForChild("ShootEvent")
        local debounce = false

        mouse.Button1Down:Connect(function()
            if debounce then return end
            debounce = true
            shootEvent:FireServer(mouse.Hit.Position)
            wait(0.15)
            debounce = false
        end)
    ]]

    -- Server side script to deal damage on shoot (Script parented to tool)
    local dmgScript = Instance.new("Script")
    dmgScript.Name = "DamageHandler"
    dmgScript.Parent = tool
    dmgScript.Source = [[
        local tool = script.Parent
        local shootEvent = tool:WaitForChild("ShootEvent")
        local DAMAGE = 25

        local Players = game:GetService("Players")

        shootEvent.OnServerEvent:Connect(function(player, targetPos)
            local character = player.Character
            if not character then return end
            local hrp = character:FindFirstChild("HumanoidRootPart")
            if not hrp then return end

            -- Raycast from gun to target pos to find hit player
            local direction = (targetPos - hrp.Position).Unit
            local ray = Ray.new(hrp.Position, direction * 500)
            local hitPart, hitPos = workspace:FindPartOnRayWithIgnoreList(ray, {character})

            if hitPart then
                local hitChar = hitPart:FindFirstAncestorOfClass("Model")
                if hitChar then
                    local humanoid = hitChar:FindFirstChildOfClass("Humanoid")
                    if humanoid and humanoid.Health > 0 and hitChar ~= character then
                        humanoid:Take
