local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

local TELEPORT_SOUND_ID = "rbxassetid://9118820499"
local FOLLOW_PARTICLE_COLOR = Color3.fromRGB(255, 221, 51)

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "TeleportFurthestGui"
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 230, 0, 50)
mainFrame.Position = UDim2.new(0, 20, 0.4, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = ScreenGui

local teleportBtn = Instance.new("TextButton")
teleportBtn.Size = UDim2.new(1, -20, 1, -10)
teleportBtn.Position = UDim2.new(0, 10, 0, 5)
teleportBtn.BackgroundColor3 = Color3.fromRGB(255, 140, 0) -- Orange
teleportBtn.TextColor3 = Color3.new(1,1,1)
teleportBtn.Font = Enum.Font.SourceSansBold
teleportBtn.TextSize = 18
teleportBtn.Text = "Teleport To Furthest"
teleportBtn.Parent = mainFrame

local function playTeleportSound(pos)
    local sound = Instance.new("Sound")
    sound.SoundId = TELEPORT_SOUND_ID
    sound.Volume = 0.75
    sound.PlayOnRemove = true
    sound.Parent = workspace
    sound.Position = pos or Vector3.new()
    sound:Destroy()
end

local function spawnParticles(position)
    local part = Instance.new("Part")
    part.Anchored = true
    part.CanCollide = false
    part.Transparency = 1
    part.Position = position
    part.Size = Vector3.new(1,1,1)
    part.Parent = workspace

    local particle = Instance.new("ParticleEmitter")
    particle.Texture = "rbxassetid://243660364"
    particle.Color = ColorSequence.new(FOLLOW_PARTICLE_COLOR)
    particle.LightEmission = 1
    particle.Size = NumberSequence.new(1)
    particle.Rate = 100
    particle.Lifetime = NumberRange.new(0.5)
    particle.Speed = NumberRange.new(2, 4)
    particle.Parent = part

    Debris:AddItem(part, 1)
end

-- Use RaycastParams to check if spot is safe (no walls or obstacles blocking)
local function isSafePosition(pos)
    local rayParams = RaycastParams.new()
    rayParams.FilterDescendantsInstances = {player.Character}
    rayParams.FilterType = Enum.RaycastFilterType.Blacklist
    rayParams.IgnoreWater = true

    -- Raycast down to find ground
    local raycastResult = workspace:Raycast(pos + Vector3.new(0, 50, 0), Vector3.new(0, -100, 0), rayParams)
    if not raycastResult then return false end
    local groundPos = raycastResult.Position

    -- Check if there is enough space above ground
    local region = Region3.new(groundPos - Vector3.new(2, 0, 2), groundPos + Vector3.new(2, 5, 2))
    local partsInRegion = workspace:FindPartsInRegion3WithIgnoreList(region, {player.Character}, 10)
    for _, part in pairs(partsInRegion) do
        if part.CanCollide and part.Transparency < 1 then
            return false
        end
    end

    -- Position is safe, return the ground position + a small Y offset
    return groundPos + Vector3.new(0, 3, 0)
end

-- Find furthest safe position on a circle of radius 60 around player
local function findFurthestSafePosition()
    local character = player.Character
    if not character then return nil end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end
    local origin = hrp.Position

    local furthestPos = nil
    local maxDist = 0
    local radius = 60

    for angle = 0, 360, 5 do
        local rad = math.rad(angle)
        local testPos = origin + Vector3.new(math.cos(rad) * radius, 0, math.sin(rad) * radius)
        local safePos = isSafePosition(testPos)
        if safePos then
            local dist = (safePos - origin).Magnitude
            if dist > maxDist then
                maxDist = dist
                furthestPos = safePos
            end
        end
    end
    return furthestPos
end

local function teleportPlayerTo(pos)
    local character = player.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    spawnParticles(hrp.Position)
    hrp.CFrame = CFrame.new(pos)
    spawnParticles(pos)
    playTeleportSound(pos)
end

teleportBtn.MouseButton1Click:Connect(function()
    local pos = findFurthestSafePosition()
    if pos then
        teleportPlayerTo(pos)
    else
        warn("No safe location found!")
    end
end)
