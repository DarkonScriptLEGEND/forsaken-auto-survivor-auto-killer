-- SERVICES
local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local StarterGui = game:GetService("StarterGui")

local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

-- GUI
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "AutoSurvivorUI"

local btn = Instance.new("TextButton", gui)
btn.Size = UDim2.new(0, 200, 0, 50)
btn.Position = UDim2.new(0, 10, 0, 10)
btn.Text = "Auto Survivor: OFF"
btn.BackgroundColor3 = Color3.fromRGB(80, 80, 255)
btn.TextColor3 = Color3.new(1,1,1)
btn.Font = Enum.Font.SourceSansBold
btn.TextSize = 20

-- VARIABLES
local enabled = false
local killer = nil
local resting = false
local cooldown = false

-- FUNCTIONS
function notify(msg)
	StarterGui:SetCore("SendNotification", {
		Title = "Auto Survivor",
		Text = msg,
		Duration = 3
	})
end

function getGenerators()
	local gens = {}
	for _, obj in pairs(Workspace:GetDescendants()) do
		if obj:IsA("Model") and obj.Name:lower():find("generator") then
			table.insert(gens, obj)
		end
	end
	return gens
end

function getKiller()
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= localPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			local h = plr.Character:FindFirstChildOfClass("Humanoid")
			if h and h.Health > 0 then
				return plr
			end
		end
	end
	return nil
end

function esp(target)
	if target and not target.Character.Head:FindFirstChild("ESP") then
		local tag = Instance.new("BillboardGui", target.Character.Head)
		tag.Name = "ESP"
		tag.Size = UDim2.new(4,0,1,0)
		tag.AlwaysOnTop = true
		local text = Instance.new("TextLabel", tag)
		text.Size = UDim2.new(1,0,1,0)
		text.BackgroundTransparency = 1
		text.Text = "KILLER"
		text.TextColor3 = Color3.fromRGB(255,0,0)
		text.TextScaled = true
	end
end

function runFromKiller()
	if not killer or not killer.Character then return end
	local kHRP = killer.Character:FindFirstChild("HumanoidRootPart")
	if not kHRP then return end

	local away = hrp.Position + (hrp.Position - kHRP.Position).Unit * 70
	local path = PathfindingService:CreatePath()
	path:ComputeAsync(hrp.Position, away)
	if path.Status == Enum.PathStatus.Complete then
		for _, waypoint in pairs(path:GetWaypoints()) do
			humanoid:MoveTo(waypoint.Position)
			humanoid.MoveToFinished:Wait()
			if not enabled then return end
			if (hrp.Position - kHRP.Position).Magnitude > 100 then break end
		end
	end
end

function goToGenerator()
	local gens = getGenerators()
	if #gens == 0 then return end
	local closest
	local dist = math.huge
	for _, gen in pairs(gens) do
		if gen:FindFirstChild("Part") then
			local d = (gen.Part.Position - hrp.Position).Magnitude
			if d < dist then
				dist = d
				closest = gen.Part.Position
			end
		end
	end
	if closest then
		local path = PathfindingService:CreatePath()
		path:ComputeAsync(hrp.Position, closest)
		if path.Status == Enum.PathStatus.Complete then
			for _, waypoint in pairs(path:GetWaypoints()) do
				humanoid:MoveTo(waypoint.Position)
				humanoid.MoveToFinished:Wait()
				if not enabled then return end
			end
		end
	end
end

function checkStamina()
	if humanoid.WalkSpeed < 10 then
		resting = true
		wait(2.5)
		resting = false
	end
end

-- MAIN LOOP
RunService.Heartbeat:Connect(function()
	if not enabled then return end
	killer = getKiller()
	if killer then esp(killer) end

	local distance = (killer and killer.Character and killer.Character:FindFirstChild("HumanoidRootPart"))
		and (hrp.Position - killer.Character.HumanoidRootPart.Position).Magnitude or math.huge

	if resting or cooldown then return end
	if distance < 40 then
		runFromKiller()
	elseif distance < 90 then
		goToGenerator()
	end
	checkStamina()
end)

-- TOGGLE
btn.MouseButton1Click:Connect(function()
	enabled = not enabled
	btn.Text = enabled and "Auto Survivor: ON" or "Auto Survivor: OFF"
	btn.BackgroundColor3 = enabled and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)
	notify(enabled and "Auto Survivor Activated" or "Auto Survivor Deactivated")
end)
